2   13304      75048  1      2      8  0.28563827
3   13304      75049  1      2      8         NaN
4   13304      75050  1      2      8         NaN
5   13304      75053  1      2      8  0.03861989
6   13304      75060  1      2      8 -0.15530707)
df <- data.frame(col1 = c(1, 2, 3, NA, 5), col2 = c('A', 'B', NA, 'C', 'D'),
col3 = c(9, NaN, 8, 7, 6))
.df
df
complete.cases(df)
count(complete.cases(df))
Count(complete.cases(df))
sum(complete.cases(df))
mapply(rep,1:4,4:1)
mapply(rep,1 2 3 4,4 3 2 1)
mapply(rep,5,7:5)
gl(3,10)
gl(4,10)
gl(4,3)
c(rnorm(10),runif(10),(rnorm(10,1)))
c(rnorm(10),runif(10),(rnorm(10,1)))
x<-norm(10)
x<-rnorm(10)
f1<-gl(2,5)
f2<-gl(5,2)
str(split(x,listf1,f2))
str(split(x,list(f1,f2)))
x
f1
f2
str(split(x,list(f1,f2)),drop=TRUE)
str(split(x,list(f1,f2),drop=TRUE))
?str
traceback
lm(y=x)
debug(lm)
lm(y=x)
head(flags)
?sapply
library(datasets)
data(iris)
?iris
head(iris)
tapply(iris$sepal.length,iris$Species,mean)
tapply(iris$sepal.Length,iris$Species,mean)
tapply(iris$sepal.Length,iris$Species,summary)
tapply(iris$Sepal.Length,iris$Species,summary)
apply(iris[, 1:4], 1, mean)
apply(iris,1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
head(mtcars)
class(mtcars)
sapply(mtcars, cyl, mean)
sapply(mtcars,cyl,mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
apply(mtcars, 2, mean)
with(mtcars, tapply(hp, cyl, mean))
rep<-with(mtcars, tapply(hp, cyl, mean))
rep2<-abs(rep[2,1]-rep[2,3])
class(rep)
dim(rep)
with(mtcars, tapply(hp, cyl, mean))
rep[2]
rep.
rep
dim(rep)
abs(rep[1]-rep[3])
debug(ls)
ls
ls
l()
ls()
source('~/.active-rstudio-document')
makeVector(c(4,5,6))
m
kk0<-makeVector(c(4,5,6))
kk0
kk0
kk0$set(c(4,5,6))
z0<-kk0$set(c(4,5,6))
z0
z0<-kk0$getmean(c(4,5,6))
kk0$getmean(c(4, 5, 6))
kk0$setmean(c(4, 5, 6))
z0<-kk0$setmean(c(4, 5, 6))
z0
z0<-kk0$set(c(4, 5, 6))
z0
my_v<-makeVector(c(4, 5, 6))
my_mean()
my_v
my_v$set(c(4, 5, 6))
m0<-my_v$set(c(4, 5, 6))
mo
m0
m1<-my_v$get(c(4, 5, 6))
m1<-my_v$set(c(4, 5, 6))
m1
source('~/.active-rstudio-document')
km<-cachemean(my_v)
km
my_v
km<-cachemean(makeVector(c(4,5,6,7,8,9,10)))
km
source('~/.active-rstudio-document')
km1<-cachemean1(makeVector1(c(4,5,6,7,8,9,10)))
km1
source('~/.active-rstudio-document')
km1<-cachemean1(makeVector1(c(4,5,6,7,8,9,10)))
km1
source('~/.active-rstudio-document')
km1<-cachemean1(makeVector1(c(4,5,6,7,8,9,10)))
km1
source('~/.active-rstudio-document')
km1<-cachemean1(makeVector1(c(4,5,6,7,8,9,10)))
km1
?reverse
?revers
?invers
?inverse
?inverse.gaussian
??inverse
?inv
library(matlib)
install.packages(" https://github.com/friendly/matlib")
library(matlib)
install.packages("http://cran.uk.r-project.org/matlib")
?matlib
myVector <- makeVector(1:15)
myVector
myVector$get(x)
myVector$get()
myVector$set()
myVector$set(x)
mvv<-myVector$set(x)
mvv
mvv<-myVector$x
mvv
mg<-myVector$get()
mg
ms<-myVector$set()
ms<-myVector$set(2:5)
ms
maa<-matrix(c(2,3,1,5),2,2)
maa
maa_m1=maa**-1
maa_m1
7*maa_m1
5/7
maa_m1*maa
vmam1<-ma^-1
vmam1<-maq^-1
vmam1<-maa^-1
vmam1
matrix
install.packages(" https://github.com/friendly/mass")
mai<-matrix.inverse(maa)
mvect<-makeVector(c(4,5,6,7,8,9,10))
mvect$getmean()
mvect
mvect$m
le_m<-cachemean(mvect)
le_m
mvect$m
mvect$getmean()
which.package
<-available.packages()
aa<-available.packages()
aa
install.packages('maths')
head(aa)
aa[where(package="math")]
aa[where(package=="math")]
aa[(package=="math")]
aa[(aa.package=="math")]
aa[(aa$package=="math")]
names(aa)
aa[aa[,2,]=="math"]
dim(aa)
aa[aa[,2]=="math"]
aa[aa[,2]=="matrixcalc"]
aa[aa[,2]=="MASS"]
A<-matrix(c(2,3,1,5),2,2)
A
cacheSolve <- function(x, ...) {
x_invrs <- x$getinvrs()
if(!is.null(x_invrs)) {
message("getting cached data")
return(x_invrs)
}
data <- x$get()
x_invrs <- solve(data, ...)
x$setinvrs(x_invrs)
x_invrs
}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
mat<-makeCacheMatrix(A)
mat
l_m<-mat.set(A)
l_m<-mat$set(A)
l_m$x
l_m
mat$x
mat$set(A)
mat$x
A
mat$get()
mat
cacheSolve(mat)
mat$getinvrs(
)
gl(9,3)
str(gl(9,3))
set.seed(1)
rpois(5, 2)
summary(plants)
?plot
list_outcome<-c(“heart attack”, “heart failure”, “pneumonia”)
list_outcome<-vector(“heart attack”, “heart failure”, “pneumonia”)
?vector
?list
list_outcome<-list(“heart attack”, “heart failure”, “pneumonia”)
c(1:5, 10.5, "next")
list_outcome<-list( "heart attack" ,  "heart failure" ,  "pneumonia" )
outcomes$nom<-list( "heart attack" ,  "heart failure" ,  "pneumonia" )
outcomes$num<-c(1,2,6)
outcomes<-dataframe()
outcomes<-data.frame()
outcomes$nom<-list( "heart attack" ,  "heart failure" ,  "pneumonia" )
outcomes$num<-c(1,2,6)
outcomes
outcomes<-data.frame(name=c("nom" , "num"))
outcomes
outcomes<-data.frame(names=c("nom" , "num"))
outcomes
?data.frame
outcomes<-data.frame(col.names=c("nom" , "num"))
outcomes
outcomes<-data.frame(column.names=c("nom" , "num"))
outcomes
outcomes<-data.frame(nom=list( "heart attack" ,  "heart failure" ,  "pneumonia" ))
outcomes<-data.frame(nom=list( "heart attack" ,  "heart failure" ,  "pneumonia" ),lowval=c(1,2,6) )
outcomes
outcomes<-data.frame(nom=c( "heart attack" ,  "heart failure" ,  "pneumonia" ),lowval=c(1,2,6) )
outcomes
outcomes$nom=="heart attack"
ls()
split(outcomes,outcomes$state)
?split
split(outcomes,outcomes$state='MT',drop=TRUE)
split(outcomes,outcomes$State ,drop=TRUE)
names(outcomes)
split(outcomes,outcomes$nom ,drop=TRUE)
split(outcomes,outcomes$nom=="pneumonia" ,drop=TRUE)
outcomes[where(outcomes$nom=="pneumonia")]
outcomes[which(outcomes$nom=="pneumonia")]
outcomes
outcomes[which(outcomes$nom=="pneumonia"),]
outcomes[which(outcomes$nom==outcome),2]
outcomes[which(outcomes$nom=="pneumonia"),2]
g=7
g
?as.numeric
which.min(c(2, 4,2,5,8,4,2))
which(c(2, 4,2,5,8,4,2)=min(c(2, 4,2,5,8,4,2)))
which(c(2, 4,2,5,8,4,2)==min(c(2, 4,2,5,8,4,2)))
which(c(2, 4,2,5,8,4,2)==min(c(2, 4,2,5,8,4,2,NA,78,2)))
min(c(2, 4,2,5,8,4,2,NA,78,2))
min(c(2, 4,2,5,8,4,2,NA,78,2),na.rm=TRUE)
outcomes
u<-outcomes[order(1)]
u
u<-outcomes[order(1),2]
u
u<-outcomes[order(1,2)
]
u
u<-outcomes[order(1,2),]
u
outcomes[order(3,2),]
outcomes[,order(3,2)]
outcomes[,order(3,2),]
fname<-c("Joe", "Bob", "Bill", "Tom", "Sue","Sam","Jane","Ruby")
score<-c(500, 490, 500, 750, 550, 500, 210, 320)
dat<-data.frame(fname,score)
order.scores<-order(dat$score,dat$fname)
dat
order.scores<-order(dat$score,dat$fname)
order.scores
dat$rank <- NA
dat$rank[order.scores] <- 1:nrow(dat)
dat
orderscores<-order(dat[,1],dat[,2])
orderscores
21order(dat[,2],dat[,1])
order(dat[,2],dat[,1])
result<-data.frame(hopital=null,state=null)
result<-data.frame(hopital=null(),state=null())
result<-data.frame(hopital="",state="null()")
result$hopital[1]<-"un joppi"
result<-data.frame(hopital=character(),state=character())
result$hopital[1]<-"un joppi"
result<-data.frame(hopital=character(0),state=character(0))
result$hopital[1]<-"un joppi"
hopital="joli opii"
state<-"ti stat"
cbind(result,c(hopital,state))
rbind(result,c(hopital,state))
result
result<-rbind(result,c(hopital,state))
result
data.frame()
?data.frame
hopi<-character(0)
hopi
length(ob)
hopi<-as.character()
hopi
length(hopi)
hopi[1]<-'un'
hopi
hopi<-character(0)
hopi[1]<-'un'
data.frame(x= numeric(0), y= integer(0), z = character(0))
ss<-data.frame(x= numeric(0), y= integer(0), z = character(0))
ss
ss$x[1]=0
a='d'
b<-c(a,c('d1',"u"))
b
a<-c(a,c('d1',"u"))
a
library(RMySQL)
ucscDb<-dbConnect(MySQL(),
user="genome",
host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb, "show databases;");
dbDisconnect(ucscDb);
install.packages("MySQL")
install.packages("RMySQL")
library(RMySQL)
ucscDb<-dbConnect(MySQL(),
user="genome",
host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb, "show databases;");
dbDisconnect(ucscDb);
result
act_test<-"UCI HAR Dataset/test/Y_test.txt"
source('C:/Leprojet/run_analysis.R', echo=TRUE)
source('C:/Leprojet/run_analysis.R', echo=TRUE)
source('C:/Leprojet/run_analysis.R', echo=TRUE)
write.table(dat,file=paste0(path,"finaldata.txt"), sep = " ", row.name=FALSE )
library(data.table)
library(dplyr)
library(POSIXlt)
setwd("C:\PC\Coursera\Data_Science\4_ExplDataAna\ExData_Plotting1")
data3<-read.table("household_power_consumption.txt" ,header=T,sep=";",na.strings = "?",stringsAsFactors = FALSE, dec=".") %>%
filter((Date == "1/2/2007"  | Date== "2/2/2007") & (!is.na(Global_active_power) & !is.na(Date) & !is.na(Time)) ) %>%
select(Date,Time,Global_active_power,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
mutate(dateTime=paste(Date,Time),n_Sub_metering_1=as.numeric(Sub_metering_1)  ,n_Sub_metering_2=as.numeric(Sub_metering_2)
,n_Sub_metering_3=as.numeric(Sub_metering_3))
png(filename="plot3.png", width = 480, height = 480, units = "px", pointsize = 12)
Sys.setlocale("LC_ALL", "English")
with(data3,{
plot( strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Sub_metering_1,type="n",xlab="",
ylab="Energy sub metering")
points(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Sub_metering_1,type="l")
points(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Sub_metering_2,type="l",col="red")
points(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Sub_metering_3,type="l",col="blue")
legend("topright",
legend=c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),
bty = "n",lwd=1, cex=1 ,y.intersp=1.4, col=c("black","red","blue"), lty=c(1,1,1))
} )
dev.off()
library(data.table)
library(dplyr)
library(POSIXlt)
setwd("C:\PC\Coursera\Data_Science\4_ExplDataAna\ExData_Plotting1")
data3<-read.table("household_power_consumption.txt" ,header=T,sep=";",na.strings = "?",stringsAsFactors = FALSE, dec=".") %>%
filter((Date == "1/2/2007"  | Date== "2/2/2007") & (!is.na(Global_active_power) & !is.na(Date) & !is.na(Time)) ) %>%
select(Date,Time,Global_active_power,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
mutate(dateTime=paste(Date,Time),n_Sub_metering_1=as.numeric(Sub_metering_1)  ,n_Sub_metering_2=as.numeric(Sub_metering_2)
,n_Sub_metering_3=as.numeric(Sub_metering_3))
library(data.table)
library(dplyr)
library(POSIXlt)
setwd("C:/PC/Coursera/Data_Science/4_ExplDataAna/ExData_Plotting1")
data3<-read.table("household_power_consumption.txt" ,header=T,sep=";",na.strings = "?",stringsAsFactors = FALSE, dec=".") %>%
filter((Date == "1/2/2007"  | Date== "2/2/2007") & (!is.na(Global_active_power) & !is.na(Date) & !is.na(Time)) ) %>%
select(Date,Time,Global_active_power,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
mutate(dateTime=paste(Date,Time),n_Sub_metering_1=as.numeric(Sub_metering_1)  ,n_Sub_metering_2=as.numeric(Sub_metering_2)
,n_Sub_metering_3=as.numeric(Sub_metering_3))
png(filename="plot3.png", width = 480, height = 480, units = "px", pointsize = 12)
Sys.setlocale("LC_ALL", "English")
with(data3,{
plot( strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Sub_metering_1,type="n",xlab="",
ylab="Energy sub metering")
points(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Sub_metering_1,type="l")
points(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Sub_metering_2,type="l",col="red")
points(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Sub_metering_3,type="l",col="blue")
legend("topright",
legend=c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),
bty = "n",lwd=1, cex=1 ,y.intersp=1.4, col=c("black","red","blue"), lty=c(1,1,1))
} )
dev.off()
## Reads the file household_power_consumption.txt
## keeps only apporpriate columns
## plot an exploratory graph of the data read
## saves the graph in the file plot4.png
##
library(data.table)
library(dplyr)
setwd("C:\PC\Coursera\Data_Science\4_ExplDataAna\ExData_Plotting1")
data4<-read.table("household_power_consumption.txt" ,header=T,sep=";",na.strings = "?",stringsAsFactors = FALSE, dec=".") %>%
filter((Date== "1/2/2007"  | Date== "2/2/2007") & (!is.na(Global_active_power) & !is.na(Date) & !is.na(Time)) & !is.na(Voltage) ) %>%
mutate(dateTime=paste(Date,Time),num_Global_active_power=as.numeric(Global_active_power),
n_Sub_metering_1=as.numeric(Sub_metering_1) ,n_Sub_metering_2=as.numeric(Sub_metering_2),
n_Sub_metering_3=as.numeric(Sub_metering_3), n_Global_reactive_power= as.numeric(Global_reactive_power) ,
n_Voltage=as.numeric(Voltage) ) %>%
select(dateTime,num_Global_active_power,n_Sub_metering_1,n_Sub_metering_2,n_Sub_metering_3,n_Global_reactive_power,n_Voltage)
Sys.setlocale("LC_ALL", "English")
png(filename="plot4.png", width = 480, height = 480, units = "px", pointsize = 12)
par(mfrow=c(2,2))
layout(matrix(c(1,2,3,4), 2, 2, byrow = F))
with(data4,{
plot(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),num_Global_active_power,type="l",xlab="", ylab="Global Active Power")
plot( strptime(data3$dateTime,"%d/%m/%Y %H:%M:%S"),n_Sub_metering_1,type="n",xlab="", ylab="Energy sub metering")
points(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Sub_metering_1,type="l")
points(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Sub_metering_2,type="l",col="red")
points(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Sub_metering_3,type="l",col="blue")
legend("topright",
legend=c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),
bty = "n",lwd=1, cex=1 ,y.intersp=1, col=c("black","red","blue"), lty=c(1,1,1))
plot(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Voltage ,type="l",xlab="datetime",ylab="voltage")
plot(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Global_reactive_power,type="l",xlab="datetime",ylab="Global_reactive_power")
})
dev.off()
## Reads the file household_power_consumption.txt
## keeps only apporpriate columns
## plot an exploratory graph of the data read
## saves the graph in the file plot4.png
##
library(data.table)
library(dplyr)
setwd("C:/PC/Coursera/Data_Science/4_ExplDataAna/ExData_Plotting1")
data4<-read.table("household_power_consumption.txt" ,header=T,sep=";",na.strings = "?",stringsAsFactors = FALSE, dec=".") %>%
filter((Date== "1/2/2007"  | Date== "2/2/2007") & (!is.na(Global_active_power) & !is.na(Date) & !is.na(Time)) & !is.na(Voltage) ) %>%
mutate(dateTime=paste(Date,Time),num_Global_active_power=as.numeric(Global_active_power),
n_Sub_metering_1=as.numeric(Sub_metering_1) ,n_Sub_metering_2=as.numeric(Sub_metering_2),
n_Sub_metering_3=as.numeric(Sub_metering_3), n_Global_reactive_power= as.numeric(Global_reactive_power) ,
n_Voltage=as.numeric(Voltage) ) %>%
select(dateTime,num_Global_active_power,n_Sub_metering_1,n_Sub_metering_2,n_Sub_metering_3,n_Global_reactive_power,n_Voltage)
Sys.setlocale("LC_ALL", "English")
png(filename="plot4.png", width = 480, height = 480, units = "px", pointsize = 12)
par(mfrow=c(2,2))
layout(matrix(c(1,2,3,4), 2, 2, byrow = F))
with(data4,{
plot(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),num_Global_active_power,type="l",xlab="", ylab="Global Active Power")
plot( strptime(data3$dateTime,"%d/%m/%Y %H:%M:%S"),n_Sub_metering_1,type="n",xlab="", ylab="Energy sub metering")
points(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Sub_metering_1,type="l")
points(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Sub_metering_2,type="l",col="red")
points(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Sub_metering_3,type="l",col="blue")
legend("topright",
legend=c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),
bty = "n",lwd=1, cex=1 ,y.intersp=1, col=c("black","red","blue"), lty=c(1,1,1))
plot(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Voltage ,type="l",xlab="datetime",ylab="voltage")
plot(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),n_Global_reactive_power,type="l",xlab="datetime",ylab="Global_reactive_power")
})
dev.off()
data2<-read.table("household_power_consumption.txt" ,header=T,sep=";",na.strings = "?",stringsAsFactors = FALSE, dec=".") %>%
filter((Date == "1/2/2007"  | Date== "2/2/2007") & (!is.na(Global_active_power) & !is.na(Date) & !is.na(Time)) ) %>%
select(Date,Time,Global_active_power) %>%
mutate(dateTime=paste(Date,Time),num_Global_active_power=as.numeric(Global_active_power))
png(filename="plot1.png", width = 480, height = 480, units = "px", pointsize = 12)
## Reads the file household_power_consumption.txt
## keeps only apporpriate columns
## plot an exploratory graph of the data read
## saves the graph in the file plot1.png
##
library(data.table)
library(dplyr)
setwd("C:/PC/Coursera/Data_Science/4_ExplDataAna/ExData_Plotting1")
data1<-read.table("household_power_consumption.txt" ,header=T,sep=";",na.strings = "?",stringsAsFactors = FALSE, dec=".") %>%
filter(Date== "1/2/2007"  | Date== "2/2/2007" ) %>%
select(Global_active_power,Date)
png(filename="plot1.png", width = 480, height = 480, units = "px", pointsize = 12)
hist(as.numeric(data1$Global_active_power),col="red",main="Global Active Power ",
xlab="Global Active Power (kilowatts)",ylab= "Frequency", breaks=12,ylim=c(0,1200))
dev.off()
## Reads the file household_power_consumption.txt
## keeps only apporpriate columns
## plot an exploratory graph of the data read
## saves the graph in the file plot2.png
##
library(data.table)
library(dplyr)
setwd("C:/PC/Coursera/Data_Science/4_ExplDataAna/ExData_Plotting1")
data2<-read.table("household_power_consumption.txt" ,header=T,sep=";",na.strings = "?",stringsAsFactors = FALSE, dec=".") %>%
filter((Date == "1/2/2007"  | Date== "2/2/2007") & (!is.na(Global_active_power) & !is.na(Date) & !is.na(Time)) ) %>%
select(Date,Time,Global_active_power) %>%
mutate(dateTime=paste(Date,Time),num_Global_active_power=as.numeric(Global_active_power))
png(filename="plot2.png", width = 480, height = 480, units = "px", pointsize = 12)
Sys.setlocale("LC_ALL", "English")
with(data2,
plot(strptime(dateTime,"%d/%m/%Y %H:%M:%S"),num_Global_active_power,type="l",
xlab="", ylab="Global Active Power (kilowatts)"))
dev.off()
