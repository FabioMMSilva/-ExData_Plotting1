col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), cex = 0.5)
dev.copy(png, "plot3.png", bg = "transparent")
dev.off()
library(dplyr)
# import a chink of data
someData <- read.table("household_power_consumption.txt", sep = ";" ,
header = TRUE, skip = 0, nrows = 100000, na.strings = "?")
someData$Date_Time <- as.POSIXct(strptime(paste(someData$Date, someData$Time),
format = "%d/%m/%Y %H:%M:%S"))
# select the dates between 2007-02-01 and 2007-02-02
cleanData <- filter(someData,
Date_Time >= "2007-02-01 00:00:00" & Date_Time <="2007-02-02 23:59:59")
png("plot3.png")
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), cex = 0.5)
# dev.copy(png, "plot3.png", bg = "transparent")
dev.off()
library(dplyr)
# import a chink of data
someData <- read.table("household_power_consumption.txt", sep = ";" ,
header = TRUE, skip = 0, nrows = 100000, na.strings = "?")
someData$Date_Time <- as.POSIXct(strptime(paste(someData$Date, someData$Time),
format = "%d/%m/%Y %H:%M:%S"))
# select the dates between 2007-02-01 and 2007-02-02
cleanData <- filter(someData,
Date_Time >= "2007-02-01 00:00:00" & Date_Time <="2007-02-02 23:59:59")
png("plot3.png")
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"))
# dev.copy(png, "plot3.png", bg = "transparent")
dev.off()
par(mfrow = c(2,2))
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
par(mfrow = c(2,2))
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
png("plot4.png")
par(mfrow = c(2,2))
par(mfrow = c(2,2))
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"))
library(dplyr)
# import a chink of data
someData <- read.table("household_power_consumption.txt", sep = ";" ,
header = TRUE, skip = 0, nrows = 100000, na.strings = "?")
someData$Date_Time <- as.POSIXct(strptime(paste(someData$Date, someData$Time),
format = "%d/%m/%Y %H:%M:%S"))
# select the dates between 2007-02-01 and 2007-02-02
cleanData <- filter(someData,
Date_Time >= "2007-02-01 00:00:00" & Date_Time <="2007-02-02 23:59:59")
# png("plot4.png")
par(mfrow = c(2,2))
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"))
# dev.copy(png, "plot3.png", bg = "transparent")
dev.off()
library(dplyr)
# import a chink of data
someData <- read.table("household_power_consumption.txt", sep = ";" ,
header = TRUE, skip = 0, nrows = 100000, na.strings = "?")
someData$Date_Time <- as.POSIXct(strptime(paste(someData$Date, someData$Time),
format = "%d/%m/%Y %H:%M:%S"))
# select the dates between 2007-02-01 and 2007-02-02
cleanData <- filter(someData,
Date_Time >= "2007-02-01 00:00:00" & Date_Time <="2007-02-02 23:59:59")
# png("plot4.png")
par(mfrow = c(2,2))
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"))
# dev.copy(png, "plot3.png", bg = "transparent")
# dev.off()
par(mfrow = c(2,2))
# plot top left
hist(cleanData$Global_active_power, xlab = "Global Active Power (kilowatts)", col = "red",
main = "Global Active Power")
# plot bottom left
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"))
par(mfcol = c(2,2))
hist(cleanData$Global_active_power, xlab = "Global Active Power (kilowatts)", col = "red",
main = "Global Active Power")
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"))
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 0, col = c("black", "red", "blue"))
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), box.lwd = 0)
par(mfcol = c(2,2))
# plot top left
hist(cleanData$Global_active_power, xlab = "Global Active Power (kilowatts)", col = "red",
main = "Global Active Power")
# plot bottom left
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), box.lwd = 0)
# dev.copy(png, "plot3.png", bg = "transparent")
# dev.off()
par(mfcol = c(2,2))
# plot top left
hist(cleanData$Global_active_power, xlab = "Global Active Power (kilowatts)", col = "red",
main = "Global Active Power")
# plot bottom left
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), box.lwd = 2)
# dev.copy(png, "plot3.png", bg = "transparent")
# dev.off()
par(mfcol = c(2,2))
# plot top left
hist(cleanData$Global_active_power, xlab = "Global Active Power (kilowatts)", col = "red",
main = "Global Active Power")
# plot bottom left
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), box.lty = 0)
# dev.copy(png, "plot3.png", bg = "transparent")
# dev.off()
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), box.lty = 0, cex = 0.8)
# png("plot4.png")
par(mfcol = c(2,2))
# plot top left
hist(cleanData$Global_active_power, xlab = "Global Active Power (kilowatts)", col = "red",
main = "Global Active Power")
# plot bottom left
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), box.lty = 0, cex = 0.8)
# dev.copy(png, "plot3.png", bg = "transparent")
# dev.off()
par(mfcol = c(2,2))
# plot top left
hist(cleanData$Global_active_power, xlab = "Global Active Power (kilowatts)", col = "red",
main = "Global Active Power")
# plot bottom left
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), box.lty = 0, cex = 0.6)
# dev.copy(png, "plot3.png", bg = "transparent")
# dev.off()
par(mfcol = c(2,2))
# plot top left
with(cleanData, plot(x = Date_Time, y = Global_active_power,
type = "l",
ylab = "Global Active Power (kilowatts)",
xlab = NA))
# plot bottom left
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), box.lty = 0, cex = 0.6)
# dev.copy(png, "plot3.png", bg = "transparent")
par(mfcol = c(2,2))
# plot top left
with(cleanData, plot(x = Date_Time, y = Global_active_power,
type = "l",
ylab = "Global Active Power (kilowatts)",
xlab = NA))
# plot bottom left
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), box.lty = 0, cex = 0.6)
# plot top right
with(cleanData, plot(x = Date_Time, y = Voltage,
type = "l",
ylab = "Voltage"))
# plot bottom right
with(cleanData, plot(x = Date_Time, y = Global_relative_power,
type = "l"))
par(mfcol = c(2,2))
# plot top left
with(cleanData, plot(x = Date_Time, y = Global_active_power,
type = "l",
ylab = "Global Active Power (kilowatts)",
xlab = NA))
# plot bottom left
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), box.lty = 0, cex = 0.6)
# plot top right
with(cleanData, plot(x = Date_Time, y = Voltage,
type = "l",
ylab = "Voltage"))
# plot bottom right
plot(x = cleanData$Date_Time, y = cleanData$Global_reactive_power,
type = "l")
# dev.copy(png, "plot3.png", bg = "transparent")
# dev.off()
par(mfcol = c(2,2))
# plot top left
with(cleanData, plot(x = Date_Time, y = Global_active_power,
type = "l",
ylab = "Global Active Power (kilowatts)",
xlab = NA))
# plot bottom left
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), box.lty = 0, cex = 0.6)
# plot top right
with(cleanData, plot(x = Date_Time, y = Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime"))
# plot bottom right
plot(x = cleanData$Date_Time, y = cleanData$Global_reactive_power,
type = "l",
xlab = "datetime")
# dev.copy(png, "plot3.png", bg = "transparent")
# dev.off()
par(mfcol = c(2,2))
# plot top left
with(cleanData, plot(x = Date_Time, y = Global_active_power,
type = "l",
ylab = "Global Active Power (kilowatts)",
xlab = NA))
# plot bottom left
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), box.lty = 0, cex = 0.6)
# plot top right
with(cleanData, plot(x = Date_Time, y = Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime"))
# plot bottom right
with(cleanData, plot(x = Date_Time, y = Global_reactive_power,
type = "l",
xlab = "datetime")
# dev.copy(png, "plot3.png", bg = "transparent")
# dev.off()
par(mfcol = c(2,2))
# plot top left
with(cleanData, plot(x = Date_Time, y = Global_active_power,
type = "l",
ylab = "Global Active Power (kilowatts)",
xlab = NA))
# plot bottom left
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), box.lty = 0, cex = 0.6)
# plot top right
with(cleanData, plot(x = Date_Time, y = Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime"))
# plot bottom right
with(cleanData, plot(x = Date_Time, y = Global_reactive_power,
type = "l",
xlab = "datetime"))
# dev.copy(png, "plot3.png", bg = "transparent")
# dev.off()
# png("plot4.png")
par(mfcol = c(2,2))
# plot top left
with(cleanData, plot(x = Date_Time, y = Global_active_power,
type = "l",
ylab = "Global Active Power (kilowatts)",
xlab = NA))
# plot bottom left
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), box.lty = 0, cex = 0.6)
# plot top right
with(cleanData, plot(x = Date_Time, y = Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime"))
# plot bottom right
with(cleanData, plot(x = Date_Time, y = Global_reactive_power,
type = "l",
xlab = "datetime"))
# dev.copy(png, "plot3.png", bg = "transparent")
# dev.off()
dev.copy(png, "plot3.png", bg = "transparent")
dev.off()
dev.copy(png, "plot4.png", bg = "transparent")
dev.off()
library(dplyr)
# import a chink of data
someData <- read.table("household_power_consumption.txt", sep = ";" ,
header = TRUE, skip = 0, nrows = 100000, na.strings = "?")
someData$Date_Time <- as.POSIXct(strptime(paste(someData$Date, someData$Time),
format = "%d/%m/%Y %H:%M:%S"))
# select the dates between 2007-02-01 and 2007-02-02
cleanData <- filter(someData,
Date_Time >= "2007-02-01 00:00:00" & Date_Time <="2007-02-02 23:59:59")
png("plot3.png")
plot(x = cleanData$Date_Time,
y = cleanData$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = NA)
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_2,
col = "red")
lines(x = cleanData$Date_Time,
y = cleanData$Sub_metering_3,
col = "blue")
legend(x="topright", legend =  c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"))
# dev.copy(png, "plot3.png", bg = "transparent")
dev.off()
