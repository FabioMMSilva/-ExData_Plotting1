sp <- sqrt( ((n1 - 1) * sd(n1)^2 + (n2-1) * sd(n2)^2) / (n1 + n2-2))
md <- mean(g2) - mean(g1)
semd <- sp * sqrt(1 / n1 + 1/n2)
rbind(
md + c(-1, 1) * qt(.975, n1 + n2 - 2) * semd,
t.test(g2, g1, paired = FALSE, var.equal = TRUE)$conf,
t.test(g2, g1, paired = TRUE)$conf
)
testtable<-table(g1, g2)
fit <- lm(g1 ~ g3 + g2)
confint(fit)
summary(fit)
## Using Confidence intervals to compare
g1<-(ToothGrowth$len[ToothGrowth$supp=="OJ"])
g2<-(ToothGrowth$len[ToothGrowth$supp=="VC"])
g3<-as.factor(ToothGrowth$dose)
n1 <- length(g1); n2 <- length(g2)
sp <- sqrt( ((n1 - 1) * sd(n1)^2 + (n2-1) * sd(n2)^2) / (n1 + n2-2))
md <- mean(g1) - mean(g2)
semd <- sp * sqrt(1 / n1 + 1/n2)
md + c(-1, 1) * qt(.975, n1 + n2 - 2) * semd
t.test(g1, g2, paired = FALSE, var.equal = TRUE)$conf
md + c(-1, 1) * qt(.975, n1 + n2 - 2) * semd
(md + c(-1, 1) * qt(.975, n1 + n2 - 2) * semd)
n1
n2
sp
n1 <- length(g1); n2 <- length(g2)
sp <- sqrt(((n1 - 1) * sd(g1)^2 + (n2-1) * sd(g2)^2) / (n1 + n2-2))
md <- mean(g1) - mean(g2)
semd <- sp * sqrt(1 / n1 + 1/n2)
md + c(-1, 1) * qt(.975, n1 + n2 - 2) * semd
t.test(g1, g2, paired = FALSE, var.equal = TRUE)$conf
?ToothGrowth
library("swirl")
swirl
swirl()
head(pValues)
?Boolean
?sum
sum(pvalues>.5)
sum(pValues>.5)
sum(pValues<.05)
sum(pValues<.05)
sum(p.adjust(pValues, method="bonferroni")<.05)
sum(p.adjust(pValues, method="BH")<.05)
tail(trueStatus)
table(trueStatus)
table(pValues2<.05)
table(pValues2<.05, trueStatus)
0
24/500
table(p.adjust(pValues, method="BH")<.05)
table(p.adjust(pValues2, method="bonferroni")<.05, trueStatus)
table(p.adjust(pValues2, method="BH")<.05, trueStatus)
.5
sum(1:6)/6
print(g2)
head(sh)
nrow(sh)
nh
median(resampledMedians)
median(sh)
sample(fh, nh*8)
sample(fh, nh*B)
sample(fh, nh*B, replace=TRUE)
sam<-sample(fh, nh*B, replace=TRUE)
resam<-matrix(sam, B, nh)
meds<-apply(rsam, 1, median)
meds<-apply(resam, 1, median)
meds
median(fh)-median(meds)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians, c(.025, .975))
quantile(meds, c(.025, .975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
BCcounts
group
testStat
obs<-testStat(BCcounts, group)
obs
mean(Bdata$count-Cdata$count)
sample(array())
sample(group
sample(group)
perms <- sapply(1 : 10000, function(i) testStat(BCcounts,
| sample(group)))
perms <- sapply(1 : 10000, function(i) testStat(BCcounts,sample(group)))
mean(perms>dbs)
mean(perms>obs)
testStat(DEcounts, group)
perms <- sapply(1 : 10000, function(i) testStat(DEcounts,sample(group)))
?download.file
data<-download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv)
fileurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
data<-download.file(fileurl)
data<-download.file(fileurl, destfile=./house.csv)
data<-download.file(fileurl, destfile=wd/house.csv)
download.file(fileurl, destfile=wd/house.csv)
download.file(fileurl, destfile=/house.csv)
download.file(fileurl, destfile=/house.csv)
if (!file.exists("data")) {
dir.create("data")
}
fileurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl, destfile = "./data/house.csv", method = "curl")
list.files("./data")
fileurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl, destfile = "./data/house.csv")
fileurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv?accessType=DOWNLOAD"
download.file(fileurl, destfile = "./data/house.csv")
fileurl
download.file(fileUrl, destfile = ".\data\house.csv")
download.file(fileUrl, destfile = "house.csv")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "house.csv")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "house.csv")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
setInternet2(use = TRUE)
download.file(fileUrl, destfile = "house.csv")
list.files(wwd)
list.files(wd)
list.files(.\)
data<-read.csv("house")
?read.csv
data<-read.csv(house, header = TRUE)
data<-read.csv(house.csv, header = TRUE)
house <- read.csv("C:/Users/lauren/Desktop/data Science/house.csv")
View(house)
?nrow
nrow(house$val = 24)
install.packages("dplyr")
library(dplyr)
?count
count(house, var = "VAL")
count(house, var = "VAL", wt_var= 24)
nrow(filter(house, VAL = 24))
large<-filter(house, VAL = 24)
?filter
large<-filter(.house, VAL = 24)
large<-filter(house, VAL == 24)
large
nrow(large)
fileUrlxlsx <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
setInternet2(use = TRUE)
download.file(fileUrl, destfile = "gas.xlsx")
gas <- read.file("C:/Users/lauren/Desktop/data Science/gas.xlsx")
gas <- read.table("C:/Users/lauren/Desktop/data Science/gas.xlsx")
dat<-data.frame(gas, 18:23, 7:15)
head(gas)
?read.table
gas <- read.table("C:/Users/lauren/Desktop/data Science/gas.xlsx", header = TRUE, sep = ",")
head(gas)
dat<-data.frame(gas, 18:23, 7:15)
dat<-data.table(gas, 18:23, 7:15)
dat<-(gas, 18:23, 7:15)
?data.frame
dat<-matrix(gas, 18:23, 7:15)
?"matrix"
head(dat)
dat<-read.table(gas, 18:23, 7:15)
dat<-read.table(./gas, 18:23, 7:15)
dat<-read.table(~/gas, 18:23, 7:15)
load(gas)
dat<-read.table(gas, 18:23, 7:15)
dat<-data.table(gas, 18:23, 7:15)
dat<-data.frame(gas, 18:23, 7:15)
dat<-(gas, c(18:23), c(7:15))
dat<-read.table(gas, c(18:23), c(7:15))
read.table
?read.table
?"matrix"
dat<-matrix(gas, c(18:23), c(7:15))
head(dat )
dat1<-table(gas$18:23,gas$7:15)
dat1<-table(gas$(18:23),gas$(7:15))
dat1<-data.frame(gas$(18:23),gas$(7:15))
install.packages("data.table")
?data.table
library(data.table)
?data.table
dat<-data.table(gas,18:23,7:15)
?read.table
rowIndex<-c(18:23)
colIndex<-C(7:15)
dat <- read.table("C:/Users/lauren/Desktop/data Science/gas.xlsx", sheetIndex = 1, colIndex=colIndex, rowIndex=rowIndex header = TRUE, sep = ",")
rowIndex<-c(18:23)
colIndex<-C(7:15)
dat <- read.table("C:/Users/lauren/Desktop/data Science/gas.xlsx", sheetIndex = 1, colIndex=colIndex, rowIndex=rowIndex, header = TRUE, sep = ",")
rowIndex<-18:23
colIndex<-7:15
dat <- read.table("C:/Users/lauren/Desktop/data Science/gas.xlsx", sheetIndex = 1, colIndex=colIndex, rowIndex=rowIndex, header = TRUE, sep = ",")
rowIndex<-18:23
colIndex<-7:15
dat <- read.table("C:/Users/lauren/Desktop/data Science/gas.xlsx", colIndex=colIndex, rowIndex=rowIndex, header = TRUE, sep = ",")
rowIndex<-18:23
colIndex<-7:15
dat <- read.xlxs("C:/Users/lauren/Desktop/data Science/gas.xlsx", colIndex=colIndex, rowIndex=rowIndex, header = TRUE, sep = ",")
rowIndex<-18:23
colIndex<-7:15
dat <- read.xlsx(file="C:/Users/lauren/Desktop/data Science/gas.xlsx", colIndex=colIndex, rowIndex=rowIndex, header = TRUE, sep = ",")
rowIndex<-18:23
colIndex<-7:15
dat <- read.table(file="C:/Users/lauren/Desktop/data Science/gas.xlsx", colIndex=colIndex, rowIndex=rowIndex, header = TRUE, sep = ",")
??read.xlsx
install.packages("xlsx")
library(xlsx)
dat <- read.xlsx(file="C:/Users/lauren/Desktop/data Science/gas.xlsx", colIndex=colIndex, rowIndex=rowIndex, header = TRUE, sep = ",")
rowIndex<-18:23
colIndex<-7:15
dat <- read.xlsx(file="C:/Users/lauren/Desktop/data Science/gas.xlsx", sheetIndex = 1, colIndex=colIndex, rowIndex=rowIndex, header = TRUE, sep = ",")
head(dat)
?read.xlsx
sum(dat$Zip*dat$Ext,na.rm=T)
rowIndex<-18:23
colIndex<-7:15
dat <- read.xlsx(file="C:/Users/lauren/Desktop/data Science/gas.xlsx", sheetIndex = 1, colIndex=colIndex, rowIndex=rowIndex, header = TRUE)
fileUrlxlsx <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
setInternet2(use = TRUE)
download.file(fileUrlxlsx, destfile = "gas.xlsx")
rowIndex<-18:23
colIndex<-7:15
dat <- read.xlsx(file="C:/Users/lauren/Desktop/data Science/gas.xlsx", sheetIndex = 1, colIndex=colIndex, rowIndex=rowIndex, header = TRUE)
sum(dat$Zip*dat$Ext,na.rm=T)
head(dat)
fileUrlxlsx <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
setInternet2(use = TRUE)
download.file(url=fileUrlxlsx, destfile = "gas.xlsx", mode="w", method="curl")
download.file(fileUrlxlsx, destfile = "gas.xlsx", method="curl")
fileUrlxlsx <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
setInternet2(use = TRUE)
download.file(fileUrlxlsx, destfile = "gas.xlsx")
rowIndex<-18:23
colIndex<-7:15
dat <- read.xlsx(file="C:/Users/lauren/Desktop/data Science/gas.xlsx", sheetIndex = 1, colIndex=colIndex, rowIndex=rowIndex, header = TRUE)
download.file(fileUrlxlsx, destfile = "./data Science/gas.xlsx", mode='wb')
download.file(fileUrlxlsx, destfile = "gas.xlsx", mode='wb')
rowIndex<-18:23
colIndex<-7:15
dat <- read.xlsx(file="C:/Users/lauren/Desktop/data Science/gas.xlsx", sheetIndex = 1, colIndex=colIndex, rowIndex=rowIndex, header = TRUE)
sum(dat$Zip*dat$Ext,na.rm=T)
?download.file
head(dat)
install.packages("XML")
library(XML)
##Question 4
fileURLXML<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(fileURLXML, useInternal = TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
?xmlTreeParse
doc<-xmlTreeParse(fileURLXML, useInternal = TRUE)
doc<-xmlTreeParse(file=fileURLXML, useInternal = TRUE)
fileURLXML<-"http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(file=fileURLXML, useInternal = TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]][[1]]
zipcode<-xpathSApply(rootNode, "//zipcode", xmlValue)
length(zipcode[zipcode==21231])
?fread
##Question 5
fileURL5<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
setInternet2(use = TRUE)
download.file(fileURL5, destfile = "ACS.csv")
DT<-fread("C:/Users/lauren/Desktop/data Science/ACS.csv")
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.tim(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
?system.time
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(rowMeans(DT)[DT$SEX==1] rowMeans(DT)[DT$SEX==2])
system.time(mean(DT[DT$SEX==1,]$pwgtp15) mean(DT[DT$SEX==2,]$pwgtp15))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
?weighted.mean
## Question 1
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
weighted.mean(x, w)
## Question 2
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
data(mtcars)
lm(mtcars$mpg ~ mtcars$wt)
corOfYandX <- 0.5
sdYoverX <- 2
beta1 <- corOfYandX*sdYoverX
beta1
corOfYandX <- 0.4
quiz1 <- 1.5
quiz2 <- quiz1*corOfYandX*1 + 0
quiz2
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
nx <-x - mean(x)
nx
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean <- mean(x)
sd <- sd(x)
x-m/sd
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean <- mean(x)
sd <- sd(x)
x-mean/sd
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean <- mean(x)
sd <- sd(x)
(x[1] - mean)/sd
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x-1)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit<-lm(y~x)
summary(fit)
#Question 9
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
household_power_consumption <- read.csv("C:/Users/lauren/Desktop/data Science/exdata-data-household_power_consumption/household_power_consumption.txt", sep=";")
View(household_power_consumption)
## read in data
data<- read.csv("C:/Users/lauren/Desktop/data Science/exdata-data-household_power_consumption/household_power_consumption.txt", sep=";")
## subset data
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
#format data
GAP<- as.numeric(subSetData$Global_active_power)
## create graph
hist(GAP, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.copy(png, file="plot1.png", width=480, height=480)
dev.off()
setwd("C:/Users/lauren/Desktop/data Science/ExData_Plotting1")
setwd("C:/Users/lauren/Desktop/data Science/ExData_Plotting1")
## read in data
data<- read.csv("C:/Users/lauren/Desktop/data Science/exdata-data-household_power_consumption/household_power_consumption.txt", sep=";")
## subset data
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
#format data
GAP<- as.numeric(subSetData$Global_active_power)
## create graph
hist(GAP, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.copy(png, file="plot1.png", width=480, height=480)
dev.off()
## read in data
data<- read.csv("C:/Users/lauren/Desktop/data Science/exdata-data-household_power_consumption/household_power_consumption.txt", sep=";")
## subset data
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
#format data
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
GAP<- as.numeric(subSetData$Global_active_power)
## create graph
plot(datetime, globalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
#save graph
dev.copy(png, file="plot2.png", width=480, height=480)
dev.off()
## read in data
data<- read.csv("C:/Users/lauren/Desktop/data Science/exdata-data-household_power_consumption/household_power_consumption.txt", sep=";")
## subset data
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
#format data
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
GAP<- as.numeric(subSetData$Global_active_power)
## create graph
plot(datetime, GAP, type="l", xlab="", ylab="Global Active Power (kilowatts)")
#save graph
dev.copy(png, file="plot2.png", width=480, height=480)
dev.off()
## read in data
data<- read.csv("C:/Users/lauren/Desktop/data Science/exdata-data-household_power_consumption/household_power_consumption.txt", sep=";")
## subset data
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
#format data
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
GAP<- as.numeric(subSetData$Global_active_power)
## creating graph
with(subsetData, {
plot(Sub_metering_1~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')
})
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2,
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Saving graph
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
## read in data
data<- read.csv("C:/Users/lauren/Desktop/data Science/exdata-data-household_power_consumption/household_power_consumption.txt", sep=";")
## subset data
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
#format data
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
GAP<- as.numeric(subSetData$Global_active_power)
## creating graph
with(subSetData, {
plot(Sub_metering_1~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')
})
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2,
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Saving graph
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
## read in data
data<- read.csv("C:/Users/lauren/Desktop/data Science/exdata-data-household_power_consumption/household_power_consumption.txt", sep=";")
## subset data
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
#format data
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
GAP<- as.numeric(subSetData$Global_active_power)
subMetering1 <- as.numeric(subSetData$Sub_metering_1)
subMetering2 <- as.numeric(subSetData$Sub_metering_2)
subMetering3 <- as.numeric(subSetData$Sub_metering_3)
## creating graph
plot(datetime, subMetering1, type="l", ylab="Energy Submetering", xlab="")
lines(datetime, subMetering2, type="l", col="red")
lines(datetime, subMetering3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
## Saving graph
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
## read in data
data<- read.csv("C:/Users/lauren/Desktop/data Science/exdata-data-household_power_consumption/household_power_consumption.txt", sep=";")
## subset data
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
#format data
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
GAP<- as.numeric(subSetData$Global_active_power)
subMetering1 <- as.numeric(subSetData$Sub_metering_1)
subMetering2 <- as.numeric(subSetData$Sub_metering_2)
subMetering3 <- as.numeric(subSetData$Sub_metering_3)
## creating graph
plot(datetime, subMetering1, type="l", ylab="Energy Submetering", xlab="")
lines(datetime, subMetering2, type="l", col="red")
lines(datetime, subMetering3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
## Saving graph
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
## read in data
data<- read.csv("C:/Users/lauren/Desktop/data Science/exdata-data-household_power_consumption/household_power_consumption.txt", sep=";")
## subset data
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
#format data
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
GAP<- as.numeric(subSetData$Global_active_power)
subMetering1 <- as.numeric(subSetData$Sub_metering_1)
subMetering2 <- as.numeric(subSetData$Sub_metering_2)
subMetering3 <- as.numeric(subSetData$Sub_metering_3)
## creating graph
plot(datetime, subMetering1, ylab="Energy Submetering", xlab="")
lines(datetime, subMetering2, col="red")
lines(datetime, subMetering3, col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
## Saving graph
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
## read in data
data<- read.csv("C:/Users/lauren/Desktop/data Science/exdata-data-household_power_consumption/household_power_consumption.txt", sep=";")
## subset data
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
#format data
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
GAP<- as.numeric(subSetData$Global_active_power)
subMetering1 <- as.numeric(subSetData$Sub_metering_1)
subMetering2 <- as.numeric(subSetData$Sub_metering_2)
subMetering3 <- as.numeric(subSetData$Sub_metering_3)
## creating graph
plot(datetime, subMetering1, type="l", ylab="Energy Submetering", xlab="")
lines(datetime, subMetering2, type="l", col="red")
lines(datetime, subMetering3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
## Saving graph
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
## read in data
data<- read.csv("C:/Users/lauren/Desktop/data Science/exdata-data-household_power_consumption/household_power_consumption.txt", sep=";")
## subset data
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
#format data
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
GAP<- as.numeric(subSetData$Global_active_power)
subMetering1 <- as.numeric(subSetData$Sub_metering_1)
subMetering2 <- as.numeric(subSetData$Sub_metering_2)
subMetering3 <- as.numeric(subSetData$Sub_metering_3)
## creating graph
plot(datetime, subMetering1, type="l", ylab="Energy Submetering", xlab="")
lines(datetime, subMetering2, type="l", col="red")
lines(datetime, subMetering3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
## Saving graph
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
